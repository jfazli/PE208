<?xml version="1.0" encoding="UTF-8"?>
<!--
  ANT Buildfile
 
  Copyright 2012-2013 IS2T. All rights reserved.
  IS2T PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->
<project name="soarinit">

	<import file="${scripts.dir}/extension-init.xml" />

	<target name="init/context/soar" extensionOf="init/context">
		<resources id="init.ni.files"/>
		<resources id="init.soar.bootclasspath"/> <!-- bootclasspath that is set before application classpath -->
		
		<!-- 
			'execSOAR' property is defined if the SOAR must be executed
			(i.e. execute on board or use emb characteristics on the simulator)
		-->
		<condition property="execSOAR">
			<or>
				<isset property="onBoard"/>
				<istrue value="${s3.board.compliant}"/>
			</or>
		</condition>
	</target>
	
	<target name="init/soar" extensionOf="init/execution" if="execSOAR">
		<echo message="SOAR init" level="verbose"/>
		<condition property="soar.verbose.level" value="error,warn" else="error">
			<isset property="execution.verbose"/>
		</condition>

		<condition property="soar.only.info.file" value="true" else="false">
			<isset property="onS3"/>
		</condition>
		
		<property name="soar.root.name" value="${application.main.class}"/>
		
		<augment id="init.ni.files">
			<fileset dir="${platform.dir}/lib" includes="*.ni"/>
		</augment>
	</target>
	
	<target name="init/finalization/soar" extensionOf="init/finalization" if="execSOAR">
		<pathconvert property="overall.soar.ni.files" pathsep="${path.separator}" refid="init.ni.files"/>
		<pathconvert property="overall.soar.bootclasspath" pathsep="${path.separator}" refid="init.soar.bootclasspath"/>
	</target>

	<target name="mkdir/soar" extensionOf="launch/mkdirs" if="execSOAR">
	
		<property name="soar.output.dir" location="${application.output.dir}/soar"/>
		
		<delete dir="${soar.output.dir}" includes="**/*"/>
		<mkdir dir="${soar.output.dir}"/>
	</target>
	
</project>
